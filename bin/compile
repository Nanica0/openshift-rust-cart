#!/bin/bash
#
# Adapted from https://github.com/kr/heroku-buildpack-go
#
# usage: bin/compile <build-dir> <cache-dir>

set -eo pipefail

source "${OPENSHIFT_RUST_DIR}/lib/util"

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
ver=${RUSTVERSION:-"1.1.0"}
buildpack=$(dirname $(dirname $0))
rustup=https://sh.rustup.rs
rust_cache=$cache/rust-$ver

# Python
venv=$cache/venv
mkdir -p $cache/pip
python=python2.7
PATH=$venv/bin:$PATH

if test -e $build/bin && ! test -d $build/bin
then
    echo >&2 " !     File bin exists and is not a directory."
    exit 1
fi

if ! test -f $build/.rustdir
then
    echo >&2 " !     A .rustdir is required"
    exit 1
fi

export SHELL=/bin/bash

if test -d $rust_cache/bin/rustc
then
    echo "-----> Using Rust $ver"
else
    mkdir -p $rust_cache
    cd $rust_cache
    echo    "       First download, may take several minutes"
    echo -n "-----> Installing Rust $ver..."
    wget $rustup
    mv index.html rustup.sh
    chmod 731 rustup.sh
    HOME=$rust_cache bash rustup.sh -y --default-toolchain nightly
    rm rustup.sh 
    ln -sf $rust_cache $OPENSHIFT_RUST_DIR/current
    echo " done"
fi

RUSTROOT=$OPENSHIFT_RUST_DIR/current
export RUSTROOT

CARGO_HOME=$RUSTROOT/.cargo
export CARGO_HOME

RUSTUP_HOME=$RUSTROOT/.rustup
export RUSTUP_HOME

RUSTPATH=$build/.openshift/r
export RUSTPATH

export PATH=$PATH:$RUSTROOT
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$RUSTROOT/lib

echo "-----> Running: cargo build"
cd $build

cargo build --verbose --release

echo $RUSTROOT > $OPENSHIFT_RUST_DIR/env/RUSTROOT
echo $RUSTPATH > $OPENSHIFT_RUST_DIR/env/RUSTPATH
echo "$HOME/bin:$RUSTROOT/bin" > $OPENSHIFT_RUST_DIR/env/OPENSHIFT_RUST_PATH_ELEMENT
echo "$LD_LIBRARY_PATH:$RUSTROOT/lib" > $OPENSHIFT_RUST_DIR/env/OPENSHIFT_RUST_LD_LIBRARY_PATH_ELEMENT

echo $OPENSHIFT_RUST_IP > $OPENSHIFT_RUST_DIR/env/HOST
echo $OPENSHIFT_RUST_PORT > $OPENSHIFT_RUST_DIR/env/PORT
echo $CARGO_HOME > $OPENSHIFT_RUST_DIR/env/CARGO_HOME
echo $RUSTUP_HOME > $OPENSHIFT_RUST_DIR/env/RUSTUP_HOME
