#!/bin/bash

STOPTIMEOUT=10
FMT="%a %b %d %Y %H:%M:%S GMT%z (%Z)"

source "${OPENSHIFT_RUST_DIR}/lib/util"

RUSTROOT=$OPENSHIFT_RUST_DIR/current
export RUSTROOT

CARGO_HOME=$RUSTROOT/.cargo
export CARGO_HOME

RUSTUP_HOME=$RUSTROOT/.rustup
export RUSTUP_HOME

export PATH=$PATH:$RUSTROOT/bin:$CARGO_HOME/bin
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$RUSTROOT/lib

function is_rust_service_running() {
    exec_name=$(basename $(get_rustdir))
    if [ -f $OPENSHIFT_RUST_DIR/pid/rust.pid ]; then
        rust_pid=$( cat $OPENSHIFT_RUST_DIR/pid/rust.pid 2> /dev/null )
        if [ `ps --no-heading --pid $rust_pid | wc -l` -gt 0 ] ; then
            return 0
        fi
    fi

    return 1
}

function status() {
    if [ is_rust_service_running ]; then
        client_result "Application is running"
    else
        client_result "Application is not running"
    fi
}


function start() {
    logf="${OPENSHIFT_RUST_LOG_DIR}/rust.log"

    if is_rust_service_running; then
        echo "`date +"$FMT"`: Application '$OPENSHIFT_APP_NAME' is already running; skipping start()"
        return 0
    fi

    pushd "$OPENSHIFT_REPO_DIR" > /dev/null
    {
	package=$(basename $(get_rustdir))

        if [ -d "target" ]; then
            echo "`date +"$FMT"`: Starting application '$OPENSHIFT_APP_NAME'"

	    echo $PATH >> $logf
	    echo $LD_LIBRARY_PATH >> $logf
            nohup "target/release/$package" >> $logf 2>&1 &

            ret=$?
            npid=$!
            if [ $ret -eq 0 ]; then
                echo "$npid" > "$OPENSHIFT_RUST_DIR/pid/rust.pid"
            else
                echo "Application '$OPENSHIFT_APP_NAME' failed to start - $ret" 1>&2
                exit $ret
            fi
        else
            echo "WARN: Could not find the compiled application bin/$package, will not start"
        fi
    } >> $logf
}

function stop() {
    if [ -f $OPENSHIFT_RUST_DIR/pid/rust.pid ]; then
        rust_pid=$( cat $OPENSHIFT_RUST_DIR/pid/rust.pid 2> /dev/null )
    fi

    if [ -n "$rust_pid" ]; then
        logf="${OPENSHIFT_RUST_LOG_DIR}/rust.log"
        echo "`date +"$FMT"`: Stopping application '$OPENSHIFT_APP_NAME' ..." >> $logf
        /bin/kill $rust_pid
	
        ret=$?
        if [ $ret -ne 0 ]; then
            TIMEOUT="$STOPTIMEOUT"
            while [ $TIMEOUT -gt 0 ] && is_rust_service_running ; do
                /bin/kill -0 "$rust_pid" >/dev/null 2>&1 || break
                sleep 1
                let TIMEOUT=${TIMEOUT}-1
            done
        fi

        echo "`date +"$FMT"`: Stopped Go application '$OPENSHIFT'"
        rm -f $OPENSHIFT_RUST_DIR/pid/rust.pid
    else
        echo "Warning: Application '$OPENSHIFT_APP_NAME' server exists without a pid file.  Use force-stop to kill." 1>&2
    fi
}

function restart() {
    stop
    start
}

function build() {
    ${OPENSHIFT_RUST_DIR}/bin/compile ${OPENSHIFT_REPO_DIR} ${OPENSHIFT_RUST_DIR}/cache
}

function post-deploy() {
    echo
}

function pre-build() {
    echo
}

function tidy() {
  client_message "Emptying log dir: $OPENSHIFT_RUST_LOG_DIR"
  shopt -s dotglob
  rm -rf $OPENSHIFT_RUST_LOG_DIR/*
  rm -rf $OPENSHIFT_RUST_DIR/tmp/*
}

#
#  main():
#

# Ensure arguments.
if ! [ $# -eq 1 ]; then
    echo "Usage: $0 [start|restart|graceful|graceful-stop|stop|status]"
    exit 1
fi

# Source utility functions.
source $OPENSHIFT_CARTRIDGE_SDK_BASH

# Handle commands.
case "$1" in
    start)               start       ;;
    restart|graceful)    restart     ;;
    graceful-stop|stop)  stop        ;;
    status)              status      ;;
    build)               build       ;;
    pre-build)           pre-build   ;;
    post-deploy)         post-deploy ;;
    tidy)                tidy        ;;
    *) exit 0;
esac

